import logging
import json
import os
import random
import string
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

from flask import Flask
from threading import Thread

# فقط مالک مجازه فایل آپلود کنه
OWNER_ID = 6811131989  # ← اینو با Telegram ID خودت عوض کن
BOT_USERNAME = "anime_land2025bot"  # ← نام کاربری رباتت بدون @

STORAGE_FILE = "files.json"

# لاگ‌گیری
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# فایل json اگر نبود، بساز
if not os.path.exists(STORAGE_FILE):
    with open(STORAGE_FILE, "w") as f:
        json.dump({}, f)

def generate_code():
    return ''.join(random.choices(string.ascii_lowercase + string.digits, k=8))

def load_files():
    with open(STORAGE_FILE, "r") as f:
        return json.load(f)

def save_files(data):
    with open(STORAGE_FILE, "w") as f:
        json.dump(data, f)

# 📥 فقط مالک مجازه فایل بده
async def handle_document(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.effective_user.id != OWNER_ID:
        await update.message.reply_text("شما اجازه آپلود ندارید ❌")
        return

    document = update.message.document
    file_id = document.file_id
    code = generate_code()

    data = load_files()
    data[code] = file_id
    save_files(data)

    link = f"https://t.me/{BOT_USERNAME}?start={code}"
    await update.message.reply_text(f"✅ فایل ذخیره شد\n📎 لینک اشتراک: {link}")

# 🧷 وقتی روی لینک /start کد کلیک شد
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    args = context.args
    if not args:
        await update.message.reply_text("سلام! فایلی برای دریافت وارد نشده.")
        return

    code = args[0]
    data = load_files()

    if code not in data:
        await update.message.reply_text("❌ فایل پیدا نشد یا منقضی شده.")
        return

    file_id = data[code]
    await update.message.reply_document(document=file_id)

# ✅ اجرای ربات
def main():
    app = Application.builder().token("7511118482:AAHTt6Q9YE6aYRZuyoJvObEc1lYbdVKc55c").build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.Document.ALL, handle_document))

    app.run_polling()

# 🌐 سرور Flask برای زنده موندن Replit
web_app = Flask('')

@web_app.route('/')
def home():
    return "I'm alive"

def run_web():
    web_app.run(host='0.0.0.0', port=8080)

def keep_alive():
    t = Thread(target=run_web)
    t.start()

# 🧠 شروع برنامه
if __name__ == "__main__":
    keep_alive()
    main()
